{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst elements = {\n  datetimePicker: document.getElementById('datetime-picker'),\n  startButton: document.querySelector('[data-start]'),\n  daysElement: document.querySelector('[data-days]'),\n  hoursElement: document.querySelector('[data-hours]'),\n  minutesElement: document.querySelector('[data-minutes]'),\n  secondsElement: document.querySelector('[data-seconds]'),\n};\n\nlet userSelectedDate = null;\nlet countdownInterval = null;\n\nconst addLeadingZero = value => (value < 10 ? `0${value}` : value);\n\nconst updateTimer = () => {\n  const currentDate = Date.now();\n  const difference = userSelectedDate - currentDate;\n\n  if (difference <= 0) {\n    clearInterval(countdownInterval);\n    showErrorToast('The countdown has finished!');\n    return;\n  }\n\n  const { days, hours, minutes, seconds } = convertMs(difference);\n  elements.daysElement.textContent = addLeadingZero(days);\n  elements.hoursElement.textContent = addLeadingZero(hours);\n  elements.minutesElement.textContent = addLeadingZero(minutes);\n  elements.secondsElement.textContent = addLeadingZero(seconds);\n};\n\nconst showErrorToast = message => {\n  iziToast.error({\n    title: 'Error',\n    message: message,\n    position: 'topRight',\n    backgroundColor: '#ef4040'\n  });\n};\n\nconst convertMs = ms => {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n};\n\nelements.startButton.setAttribute('disabled', true);\n\nflatpickr(elements.datetimePicker, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: Date.now(),\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0].getTime();\n    const currentDate = Date.now();\n    if (userSelectedDate <= currentDate) {\n      showErrorToast('Please choose a date in the future');\n    } else {\n      elements.startButton.removeAttribute('disabled');\n    }\n    elements.datetimePicker.disabled = true;\n  },\n});\n\nelements.startButton.addEventListener('click', () => {\n  elements.startButton.setAttribute('disabled', true);\n  countdownInterval = setInterval(updateTimer, 1000);\n});\n\n// const datetimePicker = document.getElementById('datetime-picker');\n// const startButton = document.querySelector('[data-start]');\n// const daysElement = document.querySelector('[data-days]');\n// const hoursElement = document.querySelector('[data-hours]');\n// const minutesElement = document.querySelector('[data-minutes]');\n// const secondsElement = document.querySelector('[data-seconds]');\n\n// let userSelectedDate = null;\n// let countdownInterval = null;\n\n// const addLeadingZero = value => (value < 10 ? `0${value}` : value);\n\n// const updateTimer = () => {\n//   const currentDate = Date.now();\n//   const difference = userSelectedDate - currentDate;\n\n//   if (difference <= 0) {\n//     clearInterval(countdownInterval);\n//     showErrorToast('The countdown has finished!');\n//     return;\n//   }\n\n//   const { days, hours, minutes, seconds } = convertMs(difference);\n//   daysElement.textContent = addLeadingZero(days);\n//   hoursElement.textContent = addLeadingZero(hours);\n//   minutesElement.textContent = addLeadingZero(minutes);\n//   secondsElement.textContent = addLeadingZero(seconds);\n// };\n\n// const showErrorToast = message => {\n//   iziToast.error({\n//     title: 'Error',\n//     message: message,\n//     position: 'topRight',\n//     backgroundColor: '#ef4040',\n//   });\n// };\n\n// const convertMs = ms => {\n//   const second = 1000;\n//   const minute = second * 60;\n//   const hour = minute * 60;\n//   const day = hour * 24;\n\n//   const days = Math.floor(ms / day);\n//   const hours = Math.floor((ms % day) / hour);\n//   const minutes = Math.floor(((ms % day) % hour) / minute);\n//   const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n//   return { days, hours, minutes, seconds };\n// };\n\n// startButton.setAttribute('disabled', true);\n\n// flatpickr(datetimePicker, {\n//   enableTime: true,\n//   time_24hr: true,\n//   defaultDate: Date.now(),\n//   onClose(selectedDates) {\n//     userSelectedDate = selectedDates[0].getTime();\n//     const currentDate = Date.now();\n//     if (userSelectedDate <= currentDate) {\n//       showErrorToast('Please choose a date in the future');\n//     } else {\n//       startButton.removeAttribute('disabled');\n//     }\n//     datetimePicker.disabled = true;\n//   },\n// });\n\n// startButton.addEventListener('click', () => {\n//   startButton.setAttribute('disabled', true);\n//   countdownInterval = setInterval(updateTimer, 1000);\n// });\n"],"names":["elements","userSelectedDate","countdownInterval","addLeadingZero","value","updateTimer","currentDate","difference","showErrorToast","days","hours","minutes","seconds","convertMs","message","iziToast","ms","flatpickr","selectedDates"],"mappings":"+IAKA,MAAMA,EAAW,CACf,eAAgB,SAAS,eAAe,iBAAiB,EACzD,YAAa,SAAS,cAAc,cAAc,EAClD,YAAa,SAAS,cAAc,aAAa,EACjD,aAAc,SAAS,cAAc,cAAc,EACnD,eAAgB,SAAS,cAAc,gBAAgB,EACvD,eAAgB,SAAS,cAAc,gBAAgB,CACzD,EAEA,IAAIC,EAAmB,KACnBC,EAAoB,KAExB,MAAMC,EAAiBC,GAAUA,EAAQ,GAAK,IAAIA,CAAK,GAAKA,EAEtDC,EAAc,IAAM,CACxB,MAAMC,EAAc,KAAK,MACnBC,EAAaN,EAAmBK,EAEtC,GAAIC,GAAc,EAAG,CACnB,cAAcL,CAAiB,EAC/BM,EAAe,6BAA6B,EAC5C,MACD,CAED,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUN,CAAU,EAC9DP,EAAS,YAAY,YAAcG,EAAeM,CAAI,EACtDT,EAAS,aAAa,YAAcG,EAAeO,CAAK,EACxDV,EAAS,eAAe,YAAcG,EAAeQ,CAAO,EAC5DX,EAAS,eAAe,YAAcG,EAAeS,CAAO,CAC9D,EAEMJ,EAAiBM,GAAW,CAChCC,EAAS,MAAM,CACb,MAAO,QACP,QAASD,EACT,SAAU,WACV,gBAAiB,SACrB,CAAG,CACH,EAEMD,EAAYG,GAAM,CAMtB,MAAMP,EAAO,KAAK,MAAMO,EAAK,KAAG,EAC1BN,EAAQ,KAAK,MAAOM,EAAK,MAAO,IAAI,EACpCL,EAAU,KAAK,MAAQK,EAAK,MAAO,KAAQ,GAAM,EACjDJ,EAAU,KAAK,MAASI,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,EAEAZ,EAAS,YAAY,aAAa,WAAY,EAAI,EAElDiB,EAAUjB,EAAS,eAAgB,CACjC,WAAY,GACZ,UAAW,GACX,YAAa,KAAK,IAAK,EACvB,QAAQkB,EAAe,CACrBjB,EAAmBiB,EAAc,CAAC,EAAE,QAAO,EAC3C,MAAMZ,EAAc,KAAK,MACrBL,GAAoBK,EACtBE,EAAe,oCAAoC,EAEnDR,EAAS,YAAY,gBAAgB,UAAU,EAEjDA,EAAS,eAAe,SAAW,EACpC,CACH,CAAC,EAEDA,EAAS,YAAY,iBAAiB,QAAS,IAAM,CACnDA,EAAS,YAAY,aAAa,WAAY,EAAI,EAClDE,EAAoB,YAAYG,EAAa,GAAI,CACnD,CAAC"}